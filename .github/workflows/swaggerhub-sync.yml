name: Update SwaggerHub APIs

on:
  push:
    branches:
      - main
    paths:
      - 'output/swagger.yaml'
      - 'output/patientservice.yaml'

jobs:
  update-swaggerhub:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Ensure we have at least one previous commit

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install SwaggerHub CLI
        run: npm install swaggerhub-cli

      - name: Verify SwaggerHub CLI installation
        run: npx swaggerhub --version

      - name: Set up SwaggerHub environment variables
        run: |
          echo "SWAGGERHUB_URL=https://api.swaggerhub.com" >> $GITHUB_ENV
          echo "SWAGGERHUB_API_KEY=${{ secrets.SWAGGERHUB_API_KEY }}" >> $GITHUB_ENV

      # Detect changed AsyncAPI files
      - name: Detect changed API files
        id: detect_changes
        run: |
          git fetch origin main --depth=2
          FILE_CHANGED=$(git diff --name-only HEAD~1 HEAD | grep '^output/' || true)
          echo "Changed file: $FILE_CHANGED"

          if [[ "$FILE_CHANGED" == *"output/swagger.yaml"* ]]; then
            echo "UPDATE_AUTH=true" >> $GITHUB_ENV
          fi
          if [[ "$FILE_CHANGED" == *"output/patientservice.yaml"* ]]; then
            echo "UPDATE_PATIENT=true" >> $GITHUB_ENV
          fi

      # Function to check if an API exists
      - name: Check if AuthenticationAPI2 exists
        if: env.UPDATE_AUTH == 'true'
        run: |
          if npx swaggerhub api:get marutitechlabs-69b/AuthenticationAPI2/1.0.0; then
            echo "AUTH_API_EXISTS=true" >> $GITHUB_ENV
          else
            echo "AUTH_API_EXISTS=false" >> $GITHUB_ENV
          fi
        env:
          SWAGGERHUB_API_KEY: ${{ secrets.SWAGGERHUB_API_KEY }}

      - name: Check if PatientService exists
        if: env.UPDATE_PATIENT == 'true'
        run: |
          if npx swaggerhub api:get marutitechlabs-69b/PatientService/1.0.0; then
            echo "PATIENT_API_EXISTS=true" >> $GITHUB_ENV
          else
            echo "PATIENT_API_EXISTS=false" >> $GITHUB_ENV
          fi
        env:
          SWAGGERHUB_API_KEY: ${{ secrets.SWAGGERHUB_API_KEY }}

      # If AuthenticationAPI2 exists, update it; otherwise, create it
      - name: Update or Create AuthenticationAPI2
        if: env.UPDATE_AUTH == 'true'
        run: |
          if [ "$AUTH_API_EXISTS" == "true" ]; then
            npx swaggerhub api:unpublish marutitechlabs-69b/AuthenticationAPI2/1.0.0
            npx swaggerhub api:update marutitechlabs-69b/AuthenticationAPI2/1.0.0 --file output/swagger.yaml
          else
            npx swaggerhub api:create marutitechlabs-69b/AuthenticationAPI2/1.0.0 --file output/swagger.yaml --visibility public
          fi
          npx swaggerhub api:publish marutitechlabs-69b/AuthenticationAPI2/1.0.0
        env:
          SWAGGERHUB_API_KEY: ${{ secrets.SWAGGERHUB_API_KEY }}

      # If PatientService exists, update it; otherwise, create it
      - name: Update or Create PatientService
        if: env.UPDATE_PATIENT == 'true'
        run: |
          if [ "$PATIENT_API_EXISTS" == "true" ]; then
            npx swaggerhub api:unpublish marutitechlabs-69b/PatientService/1.0.0
            npx swaggerhub api:update marutitechlabs-69b/PatientService/1.0.0 --file output/patientservice.yaml
          else
            npx swaggerhub api:create marutitechlabs-69b/PatientService/1.0.0 --file output/patientservice.yaml --visibility public
          fi
          npx swaggerhub api:publish marutitechlabs-69b/PatientService/1.0.0
        env:
          SWAGGERHUB_API_KEY: ${{ secrets.SWAGGERHUB_API_KEY }}
